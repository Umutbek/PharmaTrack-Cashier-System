# Generated by Django 3.1 on 2021-04-20 03:22

import django.core.validators
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='CashierHistory',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date_start', models.DateTimeField()),
                ('date_end', models.DateTimeField()),
                ('total', models.FloatField(null=True)),
                ('tot_trans', models.FloatField(null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Category',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200)),
                ('total_cost', models.FloatField(default=0)),
                ('total_quantity', models.FloatField(default=0)),
            ],
        ),
        migrations.CreateModel(
            name='ClientOrder',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date_ordered', models.DateTimeField(auto_now_add=True, null=True)),
                ('count_item', models.IntegerField(null=True)),
                ('total_sum', models.FloatField(default=0)),
                ('status', models.BooleanField(default=False)),
            ],
        ),
        migrations.CreateModel(
            name='ClientOrderedItem',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('quantity', models.FloatField(null=True)),
                ('sepparts', models.FloatField(null=True)),
                ('date_ordered', models.DateTimeField(auto_now_add=True, null=True)),
                ('cost_one', models.FloatField()),
                ('cost_total', models.FloatField(default=0)),
            ],
        ),
        migrations.CreateModel(
            name='GlobalItem',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('unique_id', models.CharField(max_length=200, unique=True)),
                ('name', models.CharField(max_length=200)),
                ('producer', models.CharField(blank=True, max_length=200, null=True)),
                ('description', models.TextField()),
                ('image', models.ImageField(default='global-items/default.png', upload_to='global-items/')),
                ('series', models.CharField(max_length=200, null=True)),
                ('sepparts', models.FloatField(null=True)),
                ('deadline', models.DateTimeField()),
                ('price_selling', models.FloatField(null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Report',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date_from', models.DateField()),
                ('date_to', models.DateField()),
                ('in_total', models.IntegerField(default=0)),
                ('income_total', models.IntegerField(default=0)),
                ('earn_total', models.IntegerField(default=0)),
            ],
        ),
        migrations.CreateModel(
            name='StoreItem',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('quantity', models.FloatField(default=1, validators=[django.core.validators.MinValueValidator(1)])),
                ('is_sale', models.BooleanField(default=False)),
                ('parts', models.FloatField(blank=True, null=True)),
                ('total_cost', models.FloatField(blank=True, null=True)),
                ('price_sale', models.FloatField(validators=[django.core.validators.MinValueValidator(0)])),
                ('price_received', models.FloatField(blank=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='StoreOrder',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('unique_id', models.CharField(max_length=255, unique=True)),
                ('address', models.TextField(blank=True, null=True)),
                ('date_sent', models.DateTimeField(auto_now_add=True)),
                ('date_received', models.DateTimeField(null=True)),
                ('status', models.BooleanField(default=False)),
                ('is_editable', models.BooleanField(default=True)),
                ('total_cost', models.IntegerField(default=0)),
                ('total_cnt', models.IntegerField(default=0)),
            ],
        ),
        migrations.CreateModel(
            name='StoreOrderItem',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('quantity', models.IntegerField(blank=True, null=True)),
                ('global_item', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='store_ordered_items', to='item.globalitem')),
                ('store_order', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='store_ordered_items', to='item.storeorder')),
            ],
        ),
    ]
